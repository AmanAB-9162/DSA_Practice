class Solution {
public:
    int findLHS(vector<int>& nums) {


// sort(nums.begin(),nums.end());
// int j = 0;


//         int maxLength = 0;
//         for(int i = 0;i<nums.size();i++){
//             while(nums[i] - nums[j] > 1){
//                 j++;
//             }
//             if(nums[i]- nums[j] == 1)maxLength = max(maxLength,i-j+1);

//         }
//         return maxLength;





        unordered_map<int,int>mp;
        for(auto& num : nums){
            mp[num]++;

        }
       int maxLength = 0;
       for(auto& [num,count] : mp){
       if(mp.count(num+1)){
        int curr = count + mp[num + 1];
        maxLength = max(maxLength,curr);
       }
       }
       return maxLength;
    }
};
